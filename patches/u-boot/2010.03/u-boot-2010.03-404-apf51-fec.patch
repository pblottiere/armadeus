Index: u-boot-2010.03/drivers/net/fec_mxc.c
===================================================================
--- u-boot-2010.03.orig/drivers/net/fec_mxc.c	2011-01-05 18:10:35.000000000 +0100
+++ u-boot-2010.03/drivers/net/fec_mxc.c	2011-01-05 18:11:23.000000000 +0100
@@ -162,8 +162,8 @@
 	 * Wake up from sleep if necessary
 	 * Reset PHY, then delay 300ns
 	 */
-#ifdef CONFIG_MX27
-	miiphy_write(dev->name, CONFIG_FEC_MXC_PHYADDR, PHY_MIPGSR, 0x00FF);
+#if defined(CONFIG_MX27) || defined(CONFIG_MX51)
+	miiphy_write(dev->name, CONFIG_FEC_MXC_PHYADDR, PHY_MIPGSR, (0x00E0 | CONFIG_FEC_MXC_PHYADDR));
 #endif
 	miiphy_write(dev->name, CONFIG_FEC_MXC_PHYADDR, PHY_BMCR,
 			PHY_BMCR_RESET);
@@ -184,7 +184,9 @@
 static int miiphy_wait_aneg(struct eth_device *dev)
 {
 	uint32_t start;
-	uint16_t status;
+	uint16_t status, anlpar, bmcr;
+	char *duplex;
+	int speed;
 
 	/*
 	 * Wait for AN completion
@@ -204,6 +206,25 @@
 		}
 	} while (!(status & PHY_BMSR_LS));
 
+	if (miiphy_read(dev->name, CONFIG_FEC_MXC_PHYADDR, PHY_ANLPAR, &anlpar))
+		return -1;
+
+        if (miiphy_read(dev->name, CONFIG_FEC_MXC_PHYADDR, PHY_BMCR, &bmcr))
+                return -1;
+
+	printf("%s: Link is %s", dev->name,
+		status & PHY_BMSR_LS ? "up" : "down");
+
+	if (bmcr & PHY_BMCR_AUTON) {
+		duplex = anlpar & (PHY_ANLPAR_TXFD | PHY_ANLPAR_10FD) ? "Full" : "Half";
+		speed = anlpar & (PHY_ANLPAR_TX | PHY_ANLPAR_TXFD)  ? 100 : 10;
+	} else {
+		duplex = bmcr & PHY_BMCR_DPLX ? "Full" : "Half";
+		speed = bmcr & PHY_BMCR_100_MBPS ? 100 : 10;
+	}
+
+	printf(" - %d/%s\n", speed, duplex);
+
 	return 0;
 }
 static int fec_rx_task_enable(struct fec_priv *fec)
