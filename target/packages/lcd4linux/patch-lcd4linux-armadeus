diff -uprN lcd4linux-0.10.0/configure lcd4linux-0.10.0.armadeus/configure
--- lcd4linux-0.10.0/configure	2005-06-10 13:21:49.000000000 +0200
+++ lcd4linux-0.10.0.armadeus/configure	2005-09-11 20:39:47.000000000 +0200
@@ -5893,7 +5893,7 @@ for driver in $drivers; do
          NULL="yes"
          PNG="yes"
          PPM="yes"
-	 ROUTERBOARD="yes"
+	 ROUTERBOARD="no"
 	 SERDISPLIB="yes"
          SIMPLELCD="yes"
          T6963="yes"
diff -uprN lcd4linux-0.10.0/drv_generic_parport.c lcd4linux-0.10.0.armadeus/drv_generic_parport.c
--- lcd4linux-0.10.0/drv_generic_parport.c	2005-05-08 06:32:44.000000000 +0200
+++ lcd4linux-0.10.0.armadeus/drv_generic_parport.c	2005-09-11 20:46:27.000000000 +0200
@@ -215,9 +215,8 @@ int drv_generic_parport_open(const char 
 	    return -1;
 	}
     } else
-#endif
-
     {
+#else
 	error("using raw port 0x%x (deprecated!)", Port);
 	error("You *really* should change your setup and use ppdev!");
 	if ((Port + 3) <= 0x3ff) {
@@ -231,6 +230,7 @@ int drv_generic_parport_open(const char 
 		return -1;
 	    }
 	}
+#endif // WITH_PPDEV
     }
     return 0;
 }
@@ -250,9 +250,9 @@ int drv_generic_parport_close(void)
 	}
 	free(PPdev);
     } else
-#endif
     {
 	debug("closing raw port 0x%x", Port);
+#else
 	if ((Port + 3) <= 0x3ff) {
 	    if (ioperm(Port, 3, 0) != 0) {
 		error("%s: ioperm(0x%x) failed: %s", Driver, Port, strerror(errno));
@@ -264,6 +264,7 @@ int drv_generic_parport_close(void)
 		return -1;
 	    }
 	}
+#endif // WITH_PPDEV
     }
 
     return 0;
@@ -426,11 +427,12 @@ void drv_generic_parport_direction(const
     if (PPdev) {
 	ioctl(PPfd, PPDATADIR, &direction);
     } else
-#endif
     {
+#else
 	/* code stolen from linux/parport_pc.h */
 	ctr = (ctr & ~0x20) ^ (direction ? 0x20 : 0x00);
 	outb(ctr, Port + 2);
+#endif
     }
 }
 
@@ -445,9 +447,10 @@ unsigned char drv_generic_parport_status
     if (PPdev) {
 	ioctl(PPfd, PPRSTATUS, &data);
     } else
-#endif
     {
+#else
 	data = inb(Port + 1);
+#endif
     }
 
     /* clear unused bits */
@@ -476,11 +479,12 @@ void drv_generic_parport_control(const u
 	frob.val = val;
 	ioctl(PPfd, PPFCONTROL, &frob);
     } else
-#endif
     {
+#else
 	/* code stolen from linux/parport_pc.h */
 	ctr = (ctr & ~mask) ^ val;
 	outb(ctr, Port + 2);
+#endif
     }
 }
 
@@ -519,9 +523,10 @@ void drv_generic_parport_toggle(const un
 	frob.val = value2;
 	ioctl(PPfd, PPFCONTROL, &frob);
 
-    } else
-#endif
+    }
+     else
     {
+#else
 	/* rise */
 	ctr = (ctr & ~bits) ^ value1;
 	outb(ctr, Port + 2);
@@ -532,6 +537,7 @@ void drv_generic_parport_toggle(const un
 	/* lower */
 	ctr = (ctr & ~bits) ^ value2;
 	outb(ctr, Port + 2);
+#endif
     }
 }
 
@@ -541,11 +547,13 @@ void drv_generic_parport_data(const unsi
 #ifdef WITH_PPDEV
     if (PPdev) {
 	ioctl(PPfd, PPWDATA, &data);
-    } else
-#endif
+    }
+#else
+ else
     {
 	outb(data, Port);
     }
+#endif
 }
 
 unsigned char drv_generic_parport_read(void)
@@ -555,11 +563,13 @@ unsigned char drv_generic_parport_read(v
 #ifdef WITH_PPDEV
     if (PPdev) {
 	ioctl(PPfd, PPRDATA, &data);
-    } else
-#endif
-    {
+    }
+#else
+    else {
 	data = inb(Port);
     }
+#endif // WITH_PPDEV
+
     return data;
 }
 
@@ -571,11 +581,12 @@ void drv_generic_parport_debug(void)
 #ifdef WITH_PPDEV
     if (PPdev) {
 	ioctl(PPfd, PPRCONTROL, &control);
-    } else
-#endif
-    {
+    }
+#else
+    else {
 	control = ctr;
     }
+#endif // WITH_PPDEV
 
     debug("%cSTROBE %cAUTOFD %cINIT %cSLCTIN",
 	  control & PARPORT_CONTROL_STROBE ? '-' : '+',
diff -uprN lcd4linux-0.10.0/stamp-h lcd4linux-0.10.0.armadeus/stamp-h
--- lcd4linux-0.10.0/stamp-h	1970-01-01 01:00:00.000000000 +0100
+++ lcd4linux-0.10.0.armadeus/stamp-h	2005-09-11 20:40:06.000000000 +0200
@@ -0,0 +1 @@
+timestamp
diff -uprN lcd4linux-0.10.0/udelay.c lcd4linux-0.10.0.armadeus/udelay.c
--- lcd4linux-0.10.0/udelay.c	2005-05-08 06:32:45.000000000 +0200
+++ lcd4linux-0.10.0.armadeus/udelay.c	2005-09-11 19:59:42.000000000 +0200
@@ -133,6 +133,7 @@
 #include <stdlib.h>
 #include <stdio.h>
 
+#undef USE_OLD_UDELAY // otherwise x86 asm code is used
 
 #ifdef USE_OLD_UDELAY
 
@@ -158,7 +159,7 @@
 #include "udelay.h"
 
 #ifdef USE_OLD_UDELAY
-
+coucou
 unsigned long loops_per_usec;
 
 void ndelay(const unsigned long nsec)
diff -uprN lcd4linux-0.10.0/udelay.h lcd4linux-0.10.0.armadeus/udelay.h
--- lcd4linux-0.10.0/udelay.h	2005-05-08 06:32:45.000000000 +0200
+++ lcd4linux-0.10.0.armadeus/udelay.h	2005-09-11 20:03:25.000000000 +0200
@@ -76,7 +76,10 @@
 /* REP NOP (PAUSE) is a good thing to insert into busy-wait loops. */
 static inline void rep_nop(void)
 {
+/*
     __asm__ __volatile__("rep; nop");
+*/
+    __asm__ __volatile__("nop");
 }
 
 
